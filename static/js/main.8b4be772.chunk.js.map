{"version":3,"sources":["containers/formGenerator/FormGenerator.js","api/mockRequest.js","components/appHeader/AppHeader.js","components/appHeader/useWeather.js","config/header.js","components/textInput/TextInput.js","components/textArea/TextArea.js","components/multiSelect/MultiSelect.js","components/radioGroup/RadioGroup.js","config/formsData.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","form","maxWidth","padding","marginTop","border","borderRadius","inputItem","position","errorMessage","fontSize","color","bottom","submitButton","backgroundColor","boxShadow","outline","cursor","FormGenerator","source","onSuccess","onErr","title","id","onSubmit","endPoint","classes","useRef","requiredFields","filter","item","required","map","useState","inputErrs","setError","useEffect","validateInput","e","target","errors","Number","type","minLength","maxLength","value","length","console","log","closest","querySelectorAll","formInputs","current","elements","i","oninput","Grid","xs","sm","className","ref","preventDefault","formData","FormData","url","data","Promise","res","rej","setTimeout","mockRequest","then","catch","err","reset","Typography","variant","ele","key","component","includes","errorText","disabled","theme","root","flexGrow","menuButton","marginRight","spacing","textAlign","weather","display","alignItems","AppHeader","weatherApi","testId","cityWeatherAPI","setWeather","fetch","json","name","city","temperature","Math","round","main","temp","icon","useWeather","data-testid","AppBar","Toolbar","IconButton","edge","aria-label","Button","href","src","alt","width","minWidth","marginBottom","TextInput","placeholder","gutterBottom","fontFamily","join","TextArea","cardsWrapper","flexWrap","paddingBottom","flex","justifyContent","margin","minHeight","backgroundSize","backgroundPosition","opacity","boxSizing","transition","card","background","height","RadioGroup","options","personalMessage","ratingForm","gameBugReportForm","items","image","MultiSelect","style","backgroundImage","formsSource","bugFormDataSource","api","App","forms","activeForm","setActiveForm","done","setDone","loading","setLoading","loadNext","handleOnSubmit","Container","Dialog","open","DialogTitle","onClick","CircularProgress","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.8b4be772.chunk.js","sourcesContent":["// /* eslint-disable react-hooks/exhaustive-deps */\nimport React, {useRef, useEffect, useState} from 'react'\nimport {makeStyles} from '@material-ui/styles'\nimport {Grid, Typography} from '@material-ui/core'\nimport mockRequest from '../../api/mockRequest.js'\n\n\nconst useStyles = makeStyles({\n    form: {\n        maxWidth: '100%',\n        padding: 24,\n        marginTop: 24,\n        border: '1px solid lightgray',\n        borderRadius: 5\n    },\n    inputItem: {\n        position: 'relative',\n    },\n    errorMessage: {\n        fontSize: 12,\n        color: 'red',\n        position: 'absolute',\n        bottom: 20\n    },\n    submitButton: {\n        backgroundColor: '#3f51b5',\n        padding: '12px 24px',\n        border: 'none',\n        boxShadow: '0px 3px 8px #3f51b5',\n        borderRadius: 20,\n        outline: 'none',\n        color: 'white',\n        cursor: 'pointer',\n        '&:disabled':{\n            color: 'gray',\n            backgroundColor: 'lightgray',\n            boxShadow: 'none',\n        }\n\n    }\n})\n\n\nexport default function FormGenerator({source, onSuccess, onErr, title, id, onSubmit, endPoint}) {\n    const classes = useStyles()\n    const form = useRef()\n    const requiredFields = source.filter(item => item.required).map(item => item.id)\n    const [inputErrs, setError] = useState(requiredFields)\n\n    const handleSubmit = (e) => {\n        onSubmit()\n        e.preventDefault()\n        const formData = new FormData(e.target);\n        mockRequest({url:endPoint, data: formData}).then(data => {\n\n        }).catch(err => {\n            onErr(err)\n        })\n        form.current.reset()\n        setError([])\n        setTimeout(onSuccess, 1500, id)\n    return false\n    }\n\n    useEffect(() => {\n        const validateInput = (e) => {\n            const {target} = e\n            const errors = inputErrs.filter(item => item !== Number(target.id))\n            switch(target.type) {\n                case 'text':\n                case 'textarea':\n                    const minLength = source[target.id -1].minLength\n                    const maxLength = source[target.id -1].maxLength\n                    if(\n                        (minLength && target.value.length < minLength)\n                        || \n                        (maxLength && target.value.length > maxLength)\n                        ) {\n                            setError([...errors, Number(target.id)])\n                        }\n                        else {\n                            console.log('there is NO an error')\n                            setError(errors)\n                        }\n                    break;\n                case 'radio':\n                    setError(errors)\n                    break;\n                case 'checkbox':\n                    if (target.closest('div').querySelectorAll('input:checked').length > 0) {\n                        setError(errors)\n                    } else {\n                        setError([...errors, Number(target.id)])\n                    }\n                    break;\n                default: \n                return null\n            }\n        }\n\n    /**\n     * listen to the form input changes\n     */\n        const formInputs = form.current.elements\n        for(let i = 0 ; i < formInputs.length; i++) {\n            formInputs[i].oninput = validateInput\n        }\n\n    },[inputErrs, source])  \n    \n    return (\n        <>\n            <Grid xs={false} sm={false} item/>\n            <Grid xs={12}  sm={12} item>\n                <form className={classes.form} ref={form} onSubmit={handleSubmit}>\n                    <Typography variant=\"h5\">{title}</Typography><br/>\n                    {source.map(ele => <div className={classes.inputItem} key={ele.id}>\n                        <ele.component {...ele} />\n                        {inputErrs.includes(ele.id) && <div\n                        className={classes.errorMessage}>{ele.errorText}\n                        </div>}\n                    </div>)}\n                    <button\n                        type=\"submit\"\n                        className={classes.submitButton}\n                        disabled={inputErrs.length === 0 ? false : true}>\n                        Submit\n                    </button>\n                </form>\n            </Grid>\n        </>\n    )\n}","/**\n * \n * mock http request to the backend, assuming success in this case\n * rej, is not used, can be removed.\n * @param {url} string endpoint url\n * @param {data} object formData\n */\n\nexport default function mockRequest({url, data}) {\n    return new Promise((res, rej) => {\n        console.log('sending data', [...data], 'to' , url)\n        setTimeout(res('success'), 2000)\n    })\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport BugReportIcon from '@material-ui/icons/BugReport';\nimport useWeather from './useWeather';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: 'left',\n  },\n  weather: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n}));\n\nexport default function AppHeader({ weatherApi, title = 'app name' }) {\n  AppHeader.testId = 'app-header-test';\n  const classes = useStyles();\n  const weather = useWeather(weatherApi);\n\n  return (\n    <div className={classes.root} data-testid={AppHeader.testId}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <BugReportIcon fontSize=\"large\" />\n          </IconButton>\n          <Typography variant=\"h5\" className={classes.title}>{title}</Typography>\n          {weather ? (\n            <div className={classes.weather}>\n              <Button color=\"inherit\" href=\"https://openweathermap.org/city/2643743\">\n                <span>\n                  {' '}\n                  {weather.city}\n                </span>\n              </Button>\n              {!!weather.icon && <img src={`http://openweathermap.org/img/wn/${weather.icon}.png`} alt=\"weather-icon\" />}\n              <span>\n                {' '}\n                {weather.temperature}\n                {' '}\n                °C\n              </span>\n            </div>\n          ) : <span>Loading ...</span>}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\n\n\nexport default function useWeather(cityWeatherAPI) {\n  const [weather, setWeather] = useState();\n  useEffect(() => {\n    fetch(cityWeatherAPI)\n      .then((res) => res.json()).then((data) => {\n        /**\n           * due to limit usage of the free plan in openweather\n           * the response might return as (too many requests),\n           * in this case the response will haven no (name)\n           */\n        if (data.name) {\n          setWeather({\n            city: data.name,\n            temperature: Math.round(data.main.temp),\n            icon: data.weather[0].icon,\n          });\n        }\n      }).catch(() => setWeather(false));\n  }, [cityWeatherAPI]);\n  return weather;\n}\n","\n// open weather testing api\nexport const LONDON_WEATHER = 'https://openweathermap.org/data/2.5/weather?q=London,uk&appid=439d4b804bc8187953eb36d2a8c26a02';\n\n// app name\nexport const APP_TITLE = 'Bug Reporter';\n","import React from 'react'\nimport {makeStyles} from '@material-ui/styles'\nimport { Typography } from '@material-ui/core'\n\nconst useStyles = makeStyles({\n    main: {\n        width: '100%',\n        ' & input' : {\n            minWidth: 300,\n            maxWidth: '100%',\n            border: '1px solid lightgray',\n            padding: 12,\n            marginBottom: 48,\n            borderRadius: 5,\n    }\n    },\n    \n})\n\nexport default function TextInput ({title, type, placeholder, name, id}) {\n    const testId = 'text-input-test-id'\n    TextInput.testId = testId\n    const classes = useStyles()\n    return (\n    <div className={classes.main} data-testid={testId}>\n        <Typography variant=\"subtitle1\" gutterBottom>{title}</Typography>\n        <input\n        id={id}\n        type={type}\n        placeholder={placeholder}\n        name={name}\n        />\n    </div>\n    )\n}","import React from 'react'\nimport {makeStyles} from '@material-ui/styles'\nimport { Typography } from '@material-ui/core'\n\nconst useStyles = makeStyles({\n    main: {\n        width: '100%',\n        ' & textarea' : {\n            minWidth: 300,\n            maxWidth: '100%',\n            border: '1px solid lightgray',\n            padding: 12,\n            marginBottom: 48,\n            borderRadius: 5,\n            fontFamily: [\n                'Roboto',\n                '\"Helvetica Neue\"',\n                'Arial',\n                'sans-serif'\n    ].join(','),\n    }\n    },\n    \n})\n\nexport default function TextArea ({title, type, placeholder, name, id}) {\n    const testId = 'text-input-test-id'\n    TextArea.testId = testId\n    const classes = useStyles()\n    return (\n    <div className={classes.main} data-testid={testId}>\n        <Typography variant=\"subtitle1\" gutterBottom>{title}</Typography>\n        <textarea\n        id={id}\n        type={type}\n        title={title}\n        placeholder={placeholder}\n        name={name}\n        />\n    </div>\n    )\n}","import React from 'react'\nimport {makeStyles} from '@material-ui/styles'\nimport { Typography } from '@material-ui/core'\n\nconst useStyles = makeStyles({\n    main: {\n        width: '100%',\n        position: 'relative',\n    },\n    cardsWrapper: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        position: 'relative',\n        paddingBottom: 48,\n        '& label': {\n            position: 'relative',\n            marginBottom: 24,\n            border: '1px solid #f3f3f3',\n            flex: '1 0 25%',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            margin: 12,\n            minHeight: 126,\n            borderRadius: 5,\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n            boxShadow: `5px 10px 18px lightgray`,\n            cursor: 'pointer',\n            '& input': {\n                display: 'none',\n                '&:checked + $card': {\n                    // border: '1px solid lightgreen',\n                    backgroundColor: '#3f51b5',\n                    color: 'white',\n                    opacity: '0.9',\n                    boxSizing: 'border-box',\n                    transition: 'all 300ms ease-in-out',\n                    boxShadow: `5px 10px 18px #3f51b5`\n                }\n            },\n        },\n    },\n    card: {\n        display: 'flex',\n        alignItems: 'center', \n        justifyContent: 'center',\n        background: 'lightgray',\n        opacity: '0.8',\n        height: 24,\n        width: '100%',\n        borderRadius: 5,\n        cursor: 'pointer',\n        position: 'absolute',\n        bottom: -28,\n\n    },\n})\n\nexport default function MultiSelect ({title, required, type, items, name, id}) {\n    const testId = 'multi-select-test-id'\n    MultiSelect.testId = testId\n    const classes = useStyles()\n    return (\n        <div className={classes.main} data-testid={testId}>\n            <Typography variant=\"subtitle1\" gutterBottom>{title}</Typography>\n            <div className={classes.cardsWrapper}>\n                {items.map(item => <label key={item.name} style={{backgroundImage: `url(${item.image})`}}>\n                    <input id={id} type={type} name={name} value={item.name} required={!required}/>\n                    <div className={classes.card}>{item.name}</div>\n                </label>\n                )}\n        </div>\n    </div>\n    )\n}","import React from 'react'\nimport {makeStyles} from '@material-ui/styles'\nimport { Typography } from '@material-ui/core'\n\nconst useStyles = makeStyles({\n    main: {\n        width: '100%',\n        position: 'relative',\n    },\n    cardsWrapper: {\n        display: 'flex',\n        position: 'relative',\n        '& label': {\n            marginBottom: 48,\n            flexGrow: 1,\n            border: '1px solid #f3f3f3',\n            margin: 12,\n            minHeight: 64,\n            borderRadius: 5,\n            '& input': {\n                display: 'none',\n                '&:checked + $card': {\n                    opacity: '0.8',\n                    boxSizing: 'border-box',\n                    transition: 'all 200ms ease-in-out',\n                    cursor: 'no-drop',\n                    boxShadow: `0px 10px 18px #3f51b5`,\n                }\n            },\n        },\n    },\n    card: {\n        display: 'flex',\n        alignItems: 'center', \n        justifyContent: 'center',\n        background: 'lightgray',\n        opacity: '0.5',\n        minHeight: 64,\n        width: '100%',\n        borderRadius: 5,\n        cursor: 'pointer',\n    },\n})\n\nexport default function RadioGroup ({title, required, type, options, name, id}) {\n    const testId = 'radio-group-test-id'\n    RadioGroup.testId = testId\n    const classes = useStyles()\n    return (\n        <div className={classes.main} data-testid={testId}>\n            <Typography variant=\"subtitle1\" gutterBottom>{title}</Typography>\n            <div className={classes.cardsWrapper}>\n                {options.map(item => <label key={item}>\n                    <input id={id} type={type} name={name} value={item} required={required}/>\n                    <div className={classes.card}>{item}</div>\n                </label>\n                )}\n        </div>\n    </div>\n    )\n}","import TextInput from '../components/textInput/'\nimport TextArea from '../components/textArea/'\nimport MultiSelect from '../components/multiSelect/'\nimport RadioGroup from '../components/radioGroup/'\n\nconst gameBugReportForm = [\n    {\n        id: 1,\n        title: 'Issue title',\n        name: 'title', \n        placeholder: 'Enter title',\n        required: true,\n        type: 'text',\n        minLength: 3,\n        maxLength: 40,\n        errorText: '* Required, enter between 3 - 40 character',\n        component: TextInput,\n    },\n    {\n        id: 2,\n        title: 'Select platform',\n        name: 'platform', \n        required: true,\n        type: 'radio',\n        options: ['Web', 'Android', 'IOS'],\n        errorText: '* Select one platform',\n        component: RadioGroup,\n    },\n        {\n        id: 3,\n        title: 'select a game',\n        name: 'game',\n        required: true,\n        type: 'checkbox',\n        items: [\n            {name: 'June’s Journey', image: 'https://global-uploads.webflow.com/5eba64f02efe5d4548413f86/5eba64f02efe5dbb5e413fca_junes-journey-app-icon.png'},\n            {name: 'Pearl’s Peril', image: 'https://global-uploads.webflow.com/5eba64f02efe5d4548413f86/5eba64f02efe5dcabe414018_230x0w.png'},\n            {name: 'Tropicats', image: 'https://global-uploads.webflow.com/5eba64f02efe5d4548413f86/5eba64f02efe5d0bfa413fec_tropicats-icon-p-500.png'},\n            {name: 'Diamond Dash', image: 'https://global-uploads.webflow.com/5eba64f02efe5d4548413f86/5eba64f02efe5de7df413fef_diamond-dash-icon-p-500.png'},\n            {name: 'Bubble Island 2', image: 'https://global-uploads.webflow.com/5eba64f02efe5d4548413f86/5eba64f02efe5d0d02413ff2_bubble-island-2-icon-p-500.png'},\n            {name: 'Jelly Splash', image: 'https://global-uploads.webflow.com/5eba64f02efe5d4548413f86/5eba64f02efe5df734413fed_jelly-splash-icon-p-500.png'},\n        ],\n        errorText: '* Select one or more games',\n        component: MultiSelect,\n    },\n    {\n        id: 4,\n        title: 'Issue description',\n        name: 'issue text',\n        placeholder: 'Enter description',\n        required: true,\n        type: 'textarea',\n        minLength: 20,\n        maxLength: 400,\n        errorText: '* Required, enter between 20 - 400 character',\n        component: TextArea,\n    },\n]\n\n/// personal message form data\nexport const personalMessage = [\n    {\n        id: 1,\n        title: 'contact with',\n        name: 'receiver',\n        placeholder: 'Enter title',\n        required: true,\n        type: 'text',\n        minLength: 3,\n        maxLength: 40,\n        errorText: '* Required, enter between 3 - 40 character',\n        component: TextInput,\n    },\n    {\n        id: 2,\n        title: 'Message text',\n        name: 'message text', \n        placeholder: 'Enter your message',\n        required: true,\n        type: 'textarea',\n        minLength: 10,\n        maxLength: 400,\n        errorText: '* Required, enter between 10 - 400 character',\n        component: TextArea,\n    },\n]\n\n/// rating form data\nexport const ratingForm = [\n    {\n        id: 1,\n        title: 'Select rating',\n        name: 'rating', \n        required: true,\n        type: 'radio',\n        options: ['bad', 'not bad', 'good', 'excellent'],\n        errorText: '* Select one',\n        component: RadioGroup,\n    }\n]\n\n\nexport default gameBugReportForm","import React, {useState} from 'react'\nimport FormGenerator from './containers/formGenerator'\nimport AppHeader from './components/appHeader'\nimport { LONDON_WEATHER, APP_TITLE } from './config/header'\nimport {Container, Dialog, DialogTitle, Button} from '@material-ui/core'\nimport bugFormDataSource, { personalMessage, ratingForm } from './config/formsData.js'\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst formsSource = [\n  {\n    id: 1,\n    title: 'Report game bug:',\n    source: bugFormDataSource,\n    api: 'http://www.postapi/form1',\n  },\n    {\n    id: 2,\n    title: 'Send a personal message:',\n    source: personalMessage,\n    api: 'http://www.postapi/form2',\n  },\n  {\n    id: 3,\n    title: 'Rate our bug reporter:',\n    source: ratingForm,\n    api: 'http://www.postapi/form3',\n  }\n]\n\nfunction App({forms = formsSource}) {\n  const [activeForm, setActiveForm] = useState(1)\n  const [done, setDone] = useState(false)\n  const [loading, setLoading] = useState(false)\n  \n  const loadNext = (id) => {\n    /**\n     * use timeout to mock required request time\n     */\n    setLoading(false)\n    if(forms.length > id) {\n      setActiveForm((id+1))\n      return\n    }\n    setActiveForm(null)\n    setDone(true)\n  }\n  \n  const handleOnSubmit = () => {\n    setLoading(true)\n  }\n\n  const reset = () => {\n    setLoading(false)\n    setDone(false)\n    setActiveForm(1)\n  }\n  \n  return (\n    <div className=\"App\">\n      <AppHeader weatherApi={LONDON_WEATHER} title={APP_TITLE}/>\n      <Container>\n        {forms.map(form => <div key={form.id}>\n          {activeForm === form.id && <FormGenerator\n          title={form.title}\n          endPoint={form.api}\n          id={form.id}\n          source={form.source}\n          onSuccess={loadNext}\n          onSubmit={handleOnSubmit}\n          />}\n          </div>)}\n      </Container>\n      {(loading || done) && <div>\n        <Dialog open={loading || done}>\n          <DialogTitle id=\"simple-dialog-title\">\n            {done && <>\n            All forms's submitted!<br/>\n            {' '}\n           <Button variant=\"contained\" color=\"secondary\" onClick={reset} >Restart</Button>\n            </>\n            }\n            { loading && <>\n            Loading ...\n            <CircularProgress />\n            </>\n            }\n          </DialogTitle>\n        </Dialog>\n      </div>}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}